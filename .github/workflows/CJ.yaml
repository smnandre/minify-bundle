name: Integration Tests

on:
  push:
  pull_request:
  schedule:
    - cron: "0 0 * * *" # Exécuter tous les jours à minuit
  workflow_dispatch:
    inputs:
      php-version:
        description: "PHP version"
        required: true
        default: "8.4"
        type: choice
        options:
          - "8.4"
          - "8.3"
          - "8.2"
      symfony-version:
        description: "Symfony version"
        required: true
        default: "7.2"
        type: choice
        options:
          - "next"
          - "7.2"
          - "6.4"

permissions:
  contents: read

jobs:
  install:
    name: "PHP ${{ matrix.php-version }} / SF ${{ matrix.symfony-version }}"
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - 
            php-version: 8.2
            symfony-version: 6.4
          - 
            php-version: 8.4
            symfony-version: 7.2
          - name: "PHP 8.4 / SF 7.3"
            php-version: 8.4
            symfony-version: "next"

    steps:
      - run: echo "${{ matrix.name }}"

      - name: Checkout code
        uses: actions/checkout@v3
      - name: Configure Git
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          coverage: none
          tools: composer, symfony
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COMPOSER_AUTH: ${{ secrets.COMPOSER_AUTH }} # Add this line
      - name: Setup problem matchers for PHP
        run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

      - name: Create Symfony App
        run: |
          symfony new --webapp app --version="${{ matrix.symfony-version }}" --no-interaction
          cd app

      - name: Install MinifyBundle
        run: |
          cd app
          composer config extra.symfony.allow-contrib true
          composer config repositories.minify-bundle path ../../
          composer require sensiolabs/minify-bundle:@dev --no-interaction
          composer show sensiolabs/minify-bundle
          php bin/console debug:config sensiolabs_minify

      - name: Require assets
        run: |
          cd app
          mkdir -p assets/css assets/js
          php bin/console importmap:require bootstrap
          echo "  /** CSS */  body {  background-color:   red;  } " > assets/css/style.css
          echo " /** JS */ console.log('Hello' + 'world!  '  ); " > assets/js/script.js

      - name: Compile assets
        run: |
          cd app
          echo "## asset-map:compile "
          php bin/console asset-map:compile
          echo "========== /public =========="
          du -ha public
 
      - name: Minify commands
        run: |
          cd app
          
          # Capture file content before minification
          css_before=$(cat assets/css/style.css)
          js_before=$(cat assets/js/script.js)
          
          # Perform minification
          php bin/console minify:asset assets/css/style.css assets/css/style.min.css
          php bin/console minify:asset assets/js/script.js assets/js/script.min.js
          
          # Capture file content after minification
          css_after=$(cat assets/css/style.min.css)
          js_after=$(cat assets/js/script.min.js)
          
          # Write results to the GitHub Actions summary in Markdown
          echo "## Minification Results" >> $GITHUB_STEP_SUMMARY
          
          echo "### CSS File" >> $GITHUB_STEP_SUMMARY
          echo "**Before:**" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`css" >> $GITHUB_STEP_SUMMARY
          echo "$css_before" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "**After:**" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`css" >> $GITHUB_STEP_SUMMARY
          echo "$css_after" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          
          echo "### JS File" >> $GITHUB_STEP_SUMMARY
          echo "**Before:**" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`javascript" >> $GITHUB_STEP_SUMMARY
          echo "$js_before" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "**After:**" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`javascript" >> $GITHUB_STEP_SUMMARY
          echo "$js_after" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

      - name: Minify commands
        run: |
          cd app
          echo "## minify:install "
          php bin/console minify:install
          echo "## minify:asset "
          php bin/console minify:asset assets/css/style.css assets/css/style.min.css
          php bin/console minify:asset assets/js/script.js assets/js/script.min.js
          echo "========== /assets =========="
          du -ha assets
